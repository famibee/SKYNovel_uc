const[,,...aCmd]=process.argv,minify=aCmd.includes("--minify"),subsetFont=require("subset-font"),{outputFile,readFile,ensureLink,statSync,outputJsonSync}=require("fs-extra"),is_win=process.platform==="win32",os=require("os"),{extname}=require("path"),fnc=minify?async(n,t,s)=>{const i=await readFile(n),e=await subsetFont(i,s,{targetFormat:"woff2"});await outputFile(t,e)}:(n,t)=>ensureLink(n,t),o=require("./font.json"),a=[],oInf={},username=os.userInfo().username,PATH_PRJ_FONTS="core/font",PATH_USER_FONTS=is_win?`C:/Users/${username}/AppData/Local/Microsoft/Windows/Fonts`:`/Users/${username}/Library/Fonts`,PATH_OS_FONTS=is_win?"C:/Windows/Fonts":"/Library/Fonts";for(const n in o){const t=String(o[n].inp).replace("::PATH_PRJ_FONTS::",PATH_PRJ_FONTS).replace("::PATH_USER_FONTS::",PATH_USER_FONTS).replace("::PATH_OS_FONTS::",PATH_OS_FONTS),s=`doc/prj/script/${n}${minify?".woff2":extname(t)}`;oInf[n]={inp:t,out:s,iSize:1,oSize:1},a.push(fnc(t,s,o[n].txt))}Promise.allSettled(a).then(()=>{for(const n in oInf)oInf[n]={...oInf[n],inp:o[n].inp,iSize:statSync(oInf[n].inp).size,oSize:statSync(oInf[n].out).size};outputJsonSync("core/font/info.json",oInf)});
