const[,,w="",...T]=process.argv,p=T.includes("--minify");import{exec as O}from"child_process";import{stat as m}from"fs/promises";import{outputFile as u,writeJsonSync as $,pathExistsSync as l,copy as P}from"fs-extra/esm";const S=process.platform==="win32";import{userInfo as F}from"os";import{extname as b}from"path";import x from"url";const y=x.fileURLToPath(import.meta.url),r={},h=(t=-1)=>{$(y+"on",r,{encoding:"utf8"}),t>-1&&process.exit(t)},z=p?async(t,e,i)=>{try{const n=y.slice(0,-3)+"_"+e+".txt";await u(n,i,{encoding:"utf8"}),i=i.replaceAll('"','\\"'),await new Promise((o,d)=>O(`pyftsubset "${t.inp}" --text-file="${n}" --layout-features='*' --flavor=woff2 --output-file="${t.out}" --verbose`,async(c,H,f)=>{if(c){const a=`${e} \u51FA\u529B\u30A8\u30E9\u30FC\uFF1A`+c.message.replace(/--text-file=[^\n]+/,"...");console.error(a),t.err+=a+`
`,d();return}await u(n,f,{encoding:"utf8"}),f.includes("Missing glyphs for requested Unicodes:")&&(t.err+=`${e} \u51FA\u529B\u8B66\u544A\uFF1A\u30D5\u30A9\u30F3\u30C8\u30D5\u30A1\u30A4\u30EB\u306B\u542B\u307E\u308C\u306A\u3044\u6587\u5B57\u304C\u3042\u308A\u307E\u3057\u305F\u3002\u30ED\u30B0\u3092\u78BA\u8A8D\uFF08Missing glyphs ...\uFF09\u3057\u3066\u4E0B\u3055\u3044\u3002
`),o()}))}catch(n){n instanceof Error?t.err+=n.message.replace(/--text-file=[^\n]+/,"...")+`
`:t.err+=`err pyftsubset "${t.inp}"`}}:t=>P(t.inp,t.out);import s from"./font.json"with{type:"json"};const _=[],{username:g}=F(),A=`${w}/font`,L=S?`C:/Users/${g}/AppData/Local/Microsoft/Windows/Fonts`:`/Users/${g}/Library/Fonts`,v=S?"C:/Windows/Fonts":"/Library/Fonts";for(const[t,e]of Object.entries(s)){const i=String(e.inp).replace("::PATH_PRJ_FONTS::",A).replace("::PATH_USER_FONTS::",L).replace("::PATH_OS_FONTS::",v),n=`doc/prj/script/${t}${p?".woff2":b(i)}`,o=r[t]={inp:i,out:n,iSize:1,oSize:1,err:""};if(!l(i)){o.err=`\u5909\u63DB\u5931\u6557\u3067\u3059\u3002\u5165\u529B\u30D5\u30A1\u30A4\u30EB ${s[t].inp.slice(20)} \u304C\u5B58\u5728\u3059\u308B\u304B\u78BA\u8A8D\u3057\u3066\u304F\u3060\u3055\u3044`;continue}_.push(z(o,t,s[t].txt))}Promise.allSettled(_).then(async()=>{for(const[t,e]of Object.entries(r)){const{inp:i,out:n}=e;if(e.inp=s[t].inp,!l(n)){e.err+=`\u5909\u63DB\u5931\u6557\u3067\u3059\u3002\u51FA\u529B\u30D5\u30A1\u30A4\u30EB ${e.out} \u304C\u5B58\u5728\u3057\u307E\u305B\u3093`;continue}e.iSize=(await m(i)).size,e.oSize=(await m(n)).size}h(0)});
